"""admins_and_runes

Revision ID: 069287a0a39d
Revises: a6281cb57e86
Create Date: 2024-10-10 16:29:47.267219

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "069287a0a39d"
down_revision: Union[str, None] = "a6281cb57e86"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "runes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("level", sa.Integer(), nullable=True),
        sa.Column("summand_params_id", sa.Integer(), nullable=True),
        sa.Column("multiplier_params_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["multiplier_params_id"],
            ["multiplier_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summand_params_id"],
            ["summand_params.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_runes_id"), "runes", ["id"], unique=False)
    op.create_table(
        "character_runes",
        sa.Column("character_id", sa.Integer(), nullable=False),
        sa.Column("rune_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rune_id"],
            ["runes.id"],
        ),
        sa.PrimaryKeyConstraint("character_id", "rune_id"),
    )
    op.create_table(
        "runes_abilities",
        sa.Column("rune_id", sa.Integer(), nullable=False),
        sa.Column("ability_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ability_id"],
            ["abilities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rune_id"],
            ["runes.id"],
        ),
        sa.PrimaryKeyConstraint("rune_id", "ability_id"),
    )
    op.add_column("users", sa.Column("is_admin", sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "is_admin")
    op.drop_table("runes_abilities")
    op.drop_table("character_runes")
    op.drop_index(op.f("ix_runes_id"), table_name="runes")
    op.drop_table("runes")
    # ### end Alembic commands ###
