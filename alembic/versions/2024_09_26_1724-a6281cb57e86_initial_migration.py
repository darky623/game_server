"""initial migration

Revision ID: a6281cb57e86
Revises: 
Create Date: 2024-09-26 17:24:14.570087

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a6281cb57e86"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ability_types",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ability_types_id"), "ability_types", ["id"], unique=False)
    op.create_table(
        "chats",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_chats_id"), "chats", ["id"], unique=False)
    op.create_table(
        "multiplier_params",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("damage", sa.Float(), nullable=True),
        sa.Column("vitality", sa.Float(), nullable=True),
        sa.Column("speed", sa.Float(), nullable=True),
        sa.Column("resistance", sa.Float(), nullable=True),
        sa.Column("evasion", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_multiplier_params_id"), "multiplier_params", ["id"], unique=False
    )
    op.create_table(
        "rewards",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("icon", sa.LargeBinary(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("reward_type", sa.String(length=25), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_rewards_id"), "rewards", ["id"], unique=False)
    op.create_table(
        "summand_params",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("damage", sa.Float(), nullable=True),
        sa.Column("vitality", sa.Float(), nullable=True),
        sa.Column("speed", sa.Float(), nullable=True),
        sa.Column("resistance", sa.Float(), nullable=True),
        sa.Column("evasion", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_summand_params_id"), "summand_params", ["id"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "auth_sessions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("token", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_sessions_id"), "auth_sessions", ["id"], unique=False)
    op.create_table(
        "biomes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=25), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("difficulty_lvl", sa.Integer(), nullable=True),
        sa.Column("reward_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["reward_id"],
            ["rewards.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_biomes_id"), "biomes", ["id"], unique=False)
    op.create_table(
        "character_classes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("multiplier_params_id", sa.Integer(), nullable=True),
        sa.Column("summand_params_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["multiplier_params_id"],
            ["multiplier_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summand_params_id"],
            ["summand_params.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_character_classes_id"), "character_classes", ["id"], unique=False
    )
    op.create_table(
        "clans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=25), nullable=False),
        sa.Column("short_name", sa.String(length=3), nullable=False),
        sa.Column("avatar", sa.String(), nullable=True),
        sa.Column("rang", sa.Integer(), nullable=True),
        sa.Column("is_public", sa.Boolean(), nullable=True),
        sa.Column("is_ghost", sa.Boolean(), nullable=True),
        sa.Column("description", sa.String(length=200), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("chat_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chats.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_clans_id"), "clans", ["id"], unique=False)
    op.create_table(
        "items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("level", sa.Integer(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("tier", sa.Integer(), nullable=True),
        sa.Column("summand_params_id", sa.Integer(), nullable=True),
        sa.Column("multiplier_params_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["multiplier_params_id"],
            ["multiplier_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summand_params_id"],
            ["summand_params.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_items_id"), "items", ["id"], unique=False)
    op.create_table(
        "messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.VARCHAR(length=150), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("chat_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_messages_id"), "messages", ["id"], unique=False)
    op.create_table(
        "races",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("summand_params_id", sa.Integer(), nullable=True),
        sa.Column("multiplier_params_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["multiplier_params_id"],
            ["multiplier_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summand_params_id"],
            ["summand_params.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_races_id"), "races", ["id"], unique=False)
    op.create_table(
        "request_to_friends",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sender_id", sa.Integer(), nullable=False),
        sa.Column("recipient_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["recipient_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_request_to_friends_id"), "request_to_friends", ["id"], unique=False
    )
    op.create_table(
        "users_chats",
        sa.Column("chat_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chats.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("chat_id", "user_id"),
    )
    op.create_table(
        "character_subclasses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("multiplier_params_id", sa.Integer(), nullable=True),
        sa.Column("summand_params_id", sa.Integer(), nullable=True),
        sa.Column("character_class_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_class_id"],
            ["character_classes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["multiplier_params_id"],
            ["multiplier_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summand_params_id"],
            ["summand_params.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_character_subclasses_id"), "character_subclasses", ["id"], unique=False
    )
    op.create_table(
        "friends",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("friend_id", sa.Integer(), nullable=True),
        sa.Column("request_to_add_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["friend_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["request_to_add_id"],
            ["request_to_friends.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_friends_id"), "friends", ["id"], unique=False)
    op.create_table(
        "requests_to_clans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("clan_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.Column("date_create", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["clan_id"],
            ["clans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_requests_to_clans_id"), "requests_to_clans", ["id"], unique=False
    )
    op.create_table(
        "subscribe_to_clans",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("clan_id", sa.Integer(), nullable=True),
        sa.Column(
            "role",
            sa.Enum(
                "Head",
                "Deputy",
                "Elder",
                "Officer",
                "Participant",
                name="role_enum",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.Column("date_create", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["clan_id"],
            ["clans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_subscribe_to_clans_id"), "subscribe_to_clans", ["id"], unique=False
    )
    op.create_table(
        "characters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "character_type",
            sa.Enum("MAIN", "SECONDARY", "COLLECTIBLE", name="charactertype"),
            nullable=False,
        ),
        sa.Column("class_id", sa.Integer(), nullable=True),
        sa.Column("subclass_id", sa.Integer(), nullable=True),
        sa.Column("race_id", sa.Integer(), nullable=True),
        sa.Column("summand_params_id", sa.Integer(), nullable=True),
        sa.Column("multiplier_params_id", sa.Integer(), nullable=True),
        sa.Column("fragments", sa.Integer(), nullable=True),
        sa.Column("avatar", sa.String(), nullable=True),
        sa.Column("stardom", sa.Integer(), nullable=True),
        sa.Column("level", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["character_classes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["multiplier_params_id"],
            ["multiplier_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["race_id"],
            ["races.id"],
        ),
        sa.ForeignKeyConstraint(
            ["subclass_id"],
            ["character_subclasses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summand_params_id"],
            ["summand_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_characters_id"), "characters", ["id"], unique=False)
    op.create_index(
        op.f("ix_characters_user_id"), "characters", ["user_id"], unique=False
    )
    op.create_table(
        "abilities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("tier", sa.Integer(), nullable=False),
        sa.Column("ability_type_id", sa.Integer(), nullable=True),
        sa.Column("summand_params_id", sa.Integer(), nullable=True),
        sa.Column("multiplier_params_id", sa.Integer(), nullable=True),
        sa.Column("chance", sa.Float(), nullable=True),
        sa.Column("summoned_character_id", sa.Integer(), nullable=True),
        sa.Column("summoned_quantity", sa.Integer(), nullable=True),
        sa.Column(
            "trigger_condition",
            sa.Enum(
                "ON_START",
                "ON_MOTION_START",
                "ON_COMMON_ATTACK",
                "ON_ULTIMATE_ATTACK",
                "PASSIVE",
                "ON_BUFF",
                "ON_DEBUFF",
                "ON_DEATH",
                "ON_TEAMMATE_ATTACK",
                "ON_REVIVE",
                "ON_SUMMONED",
                name="triggercondition",
            ),
            nullable=False,
        ),
        sa.Column("damage", sa.Integer(), nullable=True),
        sa.Column("healing", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ability_type_id"],
            ["ability_types.id"],
        ),
        sa.ForeignKeyConstraint(
            ["multiplier_params_id"],
            ["multiplier_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summand_params_id"],
            ["summand_params.id"],
        ),
        sa.ForeignKeyConstraint(
            ["summoned_character_id"],
            ["characters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_abilities_id"), "abilities", ["id"], unique=False)
    op.create_table(
        "bosses",
        sa.Column("boss_id", sa.Integer(), nullable=False),
        sa.Column("character_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.PrimaryKeyConstraint("boss_id"),
    )
    op.create_index(op.f("ix_bosses_boss_id"), "bosses", ["boss_id"], unique=False)
    op.create_table(
        "character_items",
        sa.Column("character_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["items.id"],
        ),
        sa.PrimaryKeyConstraint("character_id", "item_id"),
    )
    op.create_table(
        "biome_levels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number_of_lvl", sa.Integer(), nullable=True),
        sa.Column("biome_id", sa.Integer(), nullable=True),
        sa.Column("boss_id", sa.Integer(), nullable=True),
        sa.Column("reward_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["biome_id"],
            ["biomes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["boss_id"],
            ["bosses.boss_id"],
        ),
        sa.ForeignKeyConstraint(
            ["reward_id"],
            ["rewards.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_biome_levels_id"), "biome_levels", ["id"], unique=False)
    op.create_table(
        "boss_abilities",
        sa.Column("boss_id", sa.Integer(), nullable=False),
        sa.Column("ability_id", sa.Integer(), nullable=False),
        sa.Column("biome_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ability_id"],
            ["abilities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["biome_id"],
            ["biomes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["boss_id"],
            ["bosses.boss_id"],
        ),
        sa.PrimaryKeyConstraint("boss_id", "ability_id", "biome_id"),
    )
    op.create_table(
        "classes_abilities",
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("ability_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ability_id"],
            ["abilities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["class_id"],
            ["character_classes.id"],
        ),
        sa.PrimaryKeyConstraint("class_id", "ability_id"),
    )
    op.create_table(
        "races_abilities",
        sa.Column("race_id", sa.Integer(), nullable=False),
        sa.Column("ability_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ability_id"],
            ["abilities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["race_id"],
            ["races.id"],
        ),
        sa.PrimaryKeyConstraint("race_id", "ability_id"),
    )
    op.create_table(
        "subclasses_abilities",
        sa.Column("subclass_id", sa.Integer(), nullable=False),
        sa.Column("ability_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ability_id"],
            ["abilities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["subclass_id"],
            ["character_subclasses.id"],
        ),
        sa.PrimaryKeyConstraint("subclass_id", "ability_id"),
    )
    op.create_table(
        "player_progress",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=True),
        sa.Column("biome_id", sa.Integer(), nullable=True),
        sa.Column("biome_level_id", sa.Integer(), nullable=True),
        sa.Column("difficult_lvl", sa.Integer(), nullable=True),
        sa.Column("battles", sa.Integer(), nullable=True),
        sa.Column("victories", sa.Integer(), nullable=True),
        sa.Column("defeats", sa.Integer(), nullable=True),
        sa.Column("current_difficulty_level", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["biome_id"],
            ["biomes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["biome_level_id"],
            ["biome_levels.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_player_progress_id"), "player_progress", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_player_progress_id"), table_name="player_progress")
    op.drop_table("player_progress")
    op.drop_table("subclasses_abilities")
    op.drop_table("races_abilities")
    op.drop_table("classes_abilities")
    op.drop_table("boss_abilities")
    op.drop_index(op.f("ix_biome_levels_id"), table_name="biome_levels")
    op.drop_table("biome_levels")
    op.drop_table("character_items")
    op.drop_index(op.f("ix_bosses_boss_id"), table_name="bosses")
    op.drop_table("bosses")
    op.drop_index(op.f("ix_abilities_id"), table_name="abilities")
    op.drop_table("abilities")
    op.drop_index(op.f("ix_characters_user_id"), table_name="characters")
    op.drop_index(op.f("ix_characters_id"), table_name="characters")
    op.drop_table("characters")
    op.drop_index(op.f("ix_subscribe_to_clans_id"), table_name="subscribe_to_clans")
    op.drop_table("subscribe_to_clans")
    op.drop_index(op.f("ix_requests_to_clans_id"), table_name="requests_to_clans")
    op.drop_table("requests_to_clans")
    op.drop_index(op.f("ix_friends_id"), table_name="friends")
    op.drop_table("friends")
    op.drop_index(op.f("ix_character_subclasses_id"), table_name="character_subclasses")
    op.drop_table("character_subclasses")
    op.drop_table("users_chats")
    op.drop_index(op.f("ix_request_to_friends_id"), table_name="request_to_friends")
    op.drop_table("request_to_friends")
    op.drop_index(op.f("ix_races_id"), table_name="races")
    op.drop_table("races")
    op.drop_index(op.f("ix_messages_id"), table_name="messages")
    op.drop_table("messages")
    op.drop_index(op.f("ix_items_id"), table_name="items")
    op.drop_table("items")
    op.drop_index(op.f("ix_clans_id"), table_name="clans")
    op.drop_table("clans")
    op.drop_index(op.f("ix_character_classes_id"), table_name="character_classes")
    op.drop_table("character_classes")
    op.drop_index(op.f("ix_biomes_id"), table_name="biomes")
    op.drop_table("biomes")
    op.drop_index(op.f("ix_auth_sessions_id"), table_name="auth_sessions")
    op.drop_table("auth_sessions")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_summand_params_id"), table_name="summand_params")
    op.drop_table("summand_params")
    op.drop_index(op.f("ix_rewards_id"), table_name="rewards")
    op.drop_table("rewards")
    op.drop_index(op.f("ix_multiplier_params_id"), table_name="multiplier_params")
    op.drop_table("multiplier_params")
    op.drop_index(op.f("ix_chats_id"), table_name="chats")
    op.drop_table("chats")
    op.drop_index(op.f("ix_ability_types_id"), table_name="ability_types")
    op.drop_table("ability_types")
    # ### end Alembic commands ###
