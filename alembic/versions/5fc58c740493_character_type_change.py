"""character_type_change

Revision ID: 5fc58c740493
Revises: d26cf4f74492
Create Date: 2024-09-21 13:51:58.899519

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5fc58c740493"
down_revision: Union[str, None] = "d26cf4f74492"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_character_types_id", table_name="character_types")
    character_type_enum = sa.Enum(
        "MAIN", "SECONDARY", "COLLECTIBLE", name="charactertype"
    )
    character_type_enum.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "characters", sa.Column("character_type", character_type_enum, nullable=False)
    )
    op.drop_constraint(
        "characters_character_type_id_fkey", "characters", type_="foreignkey"
    )
    op.drop_column("characters", "character_type_id")
    op.drop_table("character_types")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "character_types",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="character_types_pkey"),
    )
    op.add_column(
        "characters",
        sa.Column(
            "character_type_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.create_foreign_key(
        "characters_character_type_id_fkey",
        "characters",
        "character_types",
        ["character_type_id"],
        ["id"],
    )
    op.drop_column("characters", "character_type")
    op.create_index("ix_character_types_id", "character_types", ["id"], unique=False)
    # ### end Alembic commands ###
